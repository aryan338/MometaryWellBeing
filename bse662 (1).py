# -*- coding: utf-8 -*-
"""BSE662.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cP_nWMt9ljqp-OTsFgbUDSNAhRf6IYiU
"""

import numpy as np
from os import system, name
from time import sleep, perf_counter
  
# define our clear function
def clear():
  
    # for windows
    if name == 'nt':
        _ = system('cls')
  
    # for mac and linux(here, os.name is 'posix')
    else:
        _ = system('clear')

#STAI END
def link(uri, label=None):
    if label is None: 
        label = uri
    parameters = ''

    # OSC 8 ; params ; URI ST <name> OSC 8 ;; ST 
    escape_mask = '\033]8;{};{}\033\\{}\033]8;;\033\\'

    return escape_mask.format(parameters, uri, label)

print(link('https://forms.gle/gpMLBe2M2F7PPvWb8'))

print("Enter your Name")
user_name=input()
print("Enter your Gender(Male/Female/Other)")
gender=input()
print("Enter Age")
age=input()
sleep(2)
clear()

#STAI Trait

#Stable Mode
print("Here starts the stable mode")

stable_total=0
a_prob=0.35
stable_earn=np.zeros(30)
stable_happy=np.zeros(9)
stable_response_time=[]
stable_choice=[]

for iter in range(30):
  a = np.random.randint(50,high=1000)
  b = np.random.randint(50,high=1000)
  start_time = perf_counter()
  print("Prize if A wins is:",a)
  print("Prize if B wins is:",b)
  
  print("Who do you choose? A or B")
  inp=input()
  end_time = perf_counter()
  while inp!="A" and inp!="B" :
    print("Wrong Input. Choose A or B")
    inp=input()
  
  stable_choice.append(inp)
  stable_response_time.append(round(end_time-start_time, 3))
  trial=np.random.rand()
  
  if(trial>=a_prob):
    winner="B"
  else:
    winner="A"
  
  if(winner==inp):
    print("Correct guess!!")
    if(inp=="A"):
      stable_total+=a
      stable_earn[iter]=a
    else:
      stable_total+=b
      stable_earn[iter]=b
  else:
    print("Oops! Wrong guess.")
  sleep(1)
  clear()
  if(iter%4==0):
    print("Your current total earning in stable mode is:",stable_total)
    print("Rate your Happiness from 1 to 5")
    inpu=input()
    temp=int(inpu)
    while temp<1 or temp>5:
      print("Incorrect Input. Rate your Happiness from 1 to 5")
      inpu=input()
      temp=int(inpu)
    stable_happy[int(iter/4)]=temp
    clear()

print("Your current total earning in stable mode is:",stable_total)
print("Rate your Happiness from 1 to 5")
inpu=input()
temp=int(inpu)
while temp<1 or temp>5:
  print("Incorrect Input. Rate your Happiness from 1 to 5")
  inpu=input()
  temp=int(inpu)
stable_happy[8]=temp

print("Stable Mode Ends.")

print(link('https://forms.gle/Cckmmi2vi3vrf5yc6'))

#STAI State-I

#Volatile Mode
print("Here starts the volatile mode")

volatile_total=0
volatile_earn=np.zeros(40)
volatile_happy=np.zeros(11)
volatile_response_time=[]
volatile_choice=[]

a_prob=np.random.rand()
a_prob=0.15+(a_prob*0.2)

for iter in range(40):
  if(iter==20):
    a_prob=np.random.rand()
    a_prob=0.65+(a_prob*0.2)
  
  a = np.random.randint(50,high=1000)
  b = np.random.randint(50,high=1000)
  start_time=perf_counter()
  print("Prize if A wins is:",a)
  print("Prize if B wins is:",b)
  print("Who do you choose? A or B")
  inp=input()
  end_time=perf_counter()
  while inp!="A" and inp!="B" :
    print("Wrong Input. Choose A or B")
    inp=input()
  
  volatile_choice.append(inp)
  volatile_response_time.append(round(end_time-start_time, 3))
  trial=np.random.rand()
  
  if(trial>=a_prob):
    winner="B"
  else:
    winner="A"
  
  if(winner==inp):
    print("Correct guess!!")
    if(inp=="A"):
      volatile_total+=a
      volatile_earn[iter]=a
    else:
      volatile_total+=b
      volatile_earn[iter]=b
  else:
    print("Oops! Wrong guess.")
  sleep(1)
  clear()
  if(iter%4==0):
    print("Your current total earning in volatile mode is:",volatile_total)
    print("Rate your Happiness from 1 to 5")
    inpu=input()
    temp=int(inpu)
    while temp<1 or temp>5:
      print("Incorrect Input. Rate your Happiness from 1 to 5")
      inpu=input()
      temp=int(inpu)
    volatile_happy[int(iter/4)]=temp
    clear()

print(link('https://forms.gle/h5ccRD1Vmyoyn9L56'))

#STAI State-II

s_happy=stable_happy.astype(int)
s_earn=stable_earn.astype(int)
v_happy=volatile_happy.astype(int)
v_earn=volatile_earn.astype(int)
#Data Push
user_name+=".txt"
f=open(user_name,'w')
f.write("Gender: ")
f.write(gender)
f.write("\n")
f.write("Age: ")
f.write(age)
f.write("\n")
f.write("Stable Mode\n")
f.write("Total Earnings : ")
f.write(str(stable_total))
f.write("\n")
f.write("Choices:\n")
for i in range(30):
  f.write(str(stable_choice[i]))
  f.write(" ")
f.write("\n")
f.write("Individual Earning:\n")
for i in range(30):
  f.write(str(s_earn[i]))
  f.write(" ")
f.write("\n")
f.write("Individual Happiness:\n")
for i in range(9):
  f.write(str(s_happy[i]))
  f.write(" ")
f.write("\n")
f.write("Response Times:\n")
for i in range(30):
  f.write(str(stable_response_time[i]))
  f.write(" ")
f.write("\n")
f.write("Volatile Mode\n")
f.write("Total Earnings : ")
f.write(str(volatile_total))
f.write("\n")
f.write("Choices:\n")
for i in range(40):
  f.write(volatile_choice[i])
  f.write(" ")
f.write("\n")
f.write("Individual Earning:\n")
for i in range(40):
  f.write(str(v_earn[i]))
  f.write(" ")
f.write("\n")
f.write("Individual Happiness:\n")
for i in range(11):
  f.write(str(v_happy[i]))
  f.write(" ")
f.write("\n")
f.write("Response Times:\n")
for i in range(40):
  f.write(str(volatile_response_time[i]))
  f.write(" ")
f.write("\n")
f.close()